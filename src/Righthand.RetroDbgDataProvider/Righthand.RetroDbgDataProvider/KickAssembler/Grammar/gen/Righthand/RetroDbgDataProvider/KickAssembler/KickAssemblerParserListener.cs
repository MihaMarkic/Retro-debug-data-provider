//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:/GitProjects/Righthand/C64/retro-dbg-data-provider/src/Righthand.RetroDbgDataProvider/Righthand.RetroDbgDataProvider/KickAssembler/Grammar/KickAssemblerParser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Righthand.RetroDbgDataProvider.KickAssembler {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="KickAssemblerParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IKickAssemblerParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] KickAssemblerParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] KickAssemblerParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.units"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnits([NotNull] KickAssemblerParser.UnitsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.units"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnits([NotNull] KickAssemblerParser.UnitsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnit([NotNull] KickAssemblerParser.UnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnit([NotNull] KickAssemblerParser.UnitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabel([NotNull] KickAssemblerParser.LabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabel([NotNull] KickAssemblerParser.LabelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstruction([NotNull] KickAssemblerParser.InstructionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstruction([NotNull] KickAssemblerParser.InstructionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.scope"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScope([NotNull] KickAssemblerParser.ScopeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.scope"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScope([NotNull] KickAssemblerParser.ScopeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentList([NotNull] KickAssemblerParser.ArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentList([NotNull] KickAssemblerParser.ArgumentListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] KickAssemblerParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] KickAssemblerParser.ArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.labelOffsetReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabelOffsetReference([NotNull] KickAssemblerParser.LabelOffsetReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.labelOffsetReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabelOffsetReference([NotNull] KickAssemblerParser.LabelOffsetReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] KickAssemblerParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] KickAssemblerParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinaryop([NotNull] KickAssemblerParser.BinaryopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinaryop([NotNull] KickAssemblerParser.BinaryopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.assignment_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment_expression([NotNull] KickAssemblerParser.Assignment_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.assignment_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment_expression([NotNull] KickAssemblerParser.Assignment_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.shorthand_assignment_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShorthand_assignment_expression([NotNull] KickAssemblerParser.Shorthand_assignment_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.shorthand_assignment_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShorthand_assignment_expression([NotNull] KickAssemblerParser.Shorthand_assignment_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.unary_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary_operator([NotNull] KickAssemblerParser.Unary_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.unary_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary_operator([NotNull] KickAssemblerParser.Unary_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.compareop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompareop([NotNull] KickAssemblerParser.CompareopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.compareop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompareop([NotNull] KickAssemblerParser.CompareopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.classFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassFunction([NotNull] KickAssemblerParser.ClassFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.classFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassFunction([NotNull] KickAssemblerParser.ClassFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] KickAssemblerParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] KickAssemblerParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] KickAssemblerParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] KickAssemblerParser.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.compiler_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompiler_statement([NotNull] KickAssemblerParser.Compiler_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.compiler_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompiler_statement([NotNull] KickAssemblerParser.Compiler_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint([NotNull] KickAssemblerParser.PrintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint([NotNull] KickAssemblerParser.PrintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.printnow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrintnow([NotNull] KickAssemblerParser.PrintnowContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.printnow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrintnow([NotNull] KickAssemblerParser.PrintnowContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.var"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVar([NotNull] KickAssemblerParser.VarContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.var"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVar([NotNull] KickAssemblerParser.VarContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConst([NotNull] KickAssemblerParser.ConstContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConst([NotNull] KickAssemblerParser.ConstContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf([NotNull] KickAssemblerParser.IfContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf([NotNull] KickAssemblerParser.IfContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.errorif"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterErrorif([NotNull] KickAssemblerParser.ErrorifContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.errorif"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitErrorif([NotNull] KickAssemblerParser.ErrorifContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.eval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEval([NotNull] KickAssemblerParser.EvalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.eval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEval([NotNull] KickAssemblerParser.EvalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.break"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreak([NotNull] KickAssemblerParser.BreakContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.break"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreak([NotNull] KickAssemblerParser.BreakContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.watch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWatch([NotNull] KickAssemblerParser.WatchContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.watch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWatch([NotNull] KickAssemblerParser.WatchContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.watchArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWatchArguments([NotNull] KickAssemblerParser.WatchArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.watchArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWatchArguments([NotNull] KickAssemblerParser.WatchArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.enum"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnum([NotNull] KickAssemblerParser.EnumContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.enum"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnum([NotNull] KickAssemblerParser.EnumContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.enumValues"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumValues([NotNull] KickAssemblerParser.EnumValuesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.enumValues"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumValues([NotNull] KickAssemblerParser.EnumValuesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.enumValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumValue([NotNull] KickAssemblerParser.EnumValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.enumValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumValue([NotNull] KickAssemblerParser.EnumValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor([NotNull] KickAssemblerParser.ForContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor([NotNull] KickAssemblerParser.ForContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.while"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhile([NotNull] KickAssemblerParser.WhileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.while"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhile([NotNull] KickAssemblerParser.WhileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.struct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct([NotNull] KickAssemblerParser.StructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.struct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct([NotNull] KickAssemblerParser.StructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.variableList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableList([NotNull] KickAssemblerParser.VariableListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.variableList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableList([NotNull] KickAssemblerParser.VariableListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] KickAssemblerParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] KickAssemblerParser.VariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.define"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefine([NotNull] KickAssemblerParser.DefineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.define"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefine([NotNull] KickAssemblerParser.DefineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.functionDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDefine([NotNull] KickAssemblerParser.FunctionDefineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.functionDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDefine([NotNull] KickAssemblerParser.FunctionDefineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn([NotNull] KickAssemblerParser.ReturnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn([NotNull] KickAssemblerParser.ReturnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.macroDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMacroDefine([NotNull] KickAssemblerParser.MacroDefineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.macroDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMacroDefine([NotNull] KickAssemblerParser.MacroDefineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.pseudoCommandDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPseudoCommandDefine([NotNull] KickAssemblerParser.PseudoCommandDefineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.pseudoCommandDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPseudoCommandDefine([NotNull] KickAssemblerParser.PseudoCommandDefineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.pseudoCommandDefineArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPseudoCommandDefineArguments([NotNull] KickAssemblerParser.PseudoCommandDefineArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.pseudoCommandDefineArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPseudoCommandDefineArguments([NotNull] KickAssemblerParser.PseudoCommandDefineArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.namespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespace([NotNull] KickAssemblerParser.NamespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.namespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespace([NotNull] KickAssemblerParser.NamespaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.labelDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabelDirective([NotNull] KickAssemblerParser.LabelDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.labelDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabelDirective([NotNull] KickAssemblerParser.LabelDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.plugin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlugin([NotNull] KickAssemblerParser.PluginContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.plugin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlugin([NotNull] KickAssemblerParser.PluginContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.segment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSegment([NotNull] KickAssemblerParser.SegmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.segment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSegment([NotNull] KickAssemblerParser.SegmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.segmentDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSegmentDef([NotNull] KickAssemblerParser.SegmentDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.segmentDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSegmentDef([NotNull] KickAssemblerParser.SegmentDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.segmentOut"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSegmentOut([NotNull] KickAssemblerParser.SegmentOutContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.segmentOut"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSegmentOut([NotNull] KickAssemblerParser.SegmentOutContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.fileDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFileDirective([NotNull] KickAssemblerParser.FileDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.fileDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFileDirective([NotNull] KickAssemblerParser.FileDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.diskDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDiskDirective([NotNull] KickAssemblerParser.DiskDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.diskDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDiskDirective([NotNull] KickAssemblerParser.DiskDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.diskDirectiveContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDiskDirectiveContent([NotNull] KickAssemblerParser.DiskDirectiveContentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.diskDirectiveContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDiskDirectiveContent([NotNull] KickAssemblerParser.DiskDirectiveContentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.parameterMap"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterMap([NotNull] KickAssemblerParser.ParameterMapContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.parameterMap"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterMap([NotNull] KickAssemblerParser.ParameterMapContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.parameterMapItems"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterMapItems([NotNull] KickAssemblerParser.ParameterMapItemsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.parameterMapItems"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterMapItems([NotNull] KickAssemblerParser.ParameterMapItemsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.parameterMapItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterMapItem([NotNull] KickAssemblerParser.ParameterMapItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.parameterMapItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterMapItem([NotNull] KickAssemblerParser.ParameterMapItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.modify"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModify([NotNull] KickAssemblerParser.ModifyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.modify"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModify([NotNull] KickAssemblerParser.ModifyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.fileModify"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFileModify([NotNull] KickAssemblerParser.FileModifyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.fileModify"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFileModify([NotNull] KickAssemblerParser.FileModifyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.assert"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssert([NotNull] KickAssemblerParser.AssertContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.assert"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssert([NotNull] KickAssemblerParser.AssertContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.assertError"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssertError([NotNull] KickAssemblerParser.AssertErrorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.assertError"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssertError([NotNull] KickAssemblerParser.AssertErrorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.pseudopc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPseudopc([NotNull] KickAssemblerParser.PseudopcContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.pseudopc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPseudopc([NotNull] KickAssemblerParser.PseudopcContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.zp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterZp([NotNull] KickAssemblerParser.ZpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.zp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitZp([NotNull] KickAssemblerParser.ZpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.zpArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterZpArgumentList([NotNull] KickAssemblerParser.ZpArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.zpArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitZpArgumentList([NotNull] KickAssemblerParser.ZpArgumentListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.zpArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterZpArgument([NotNull] KickAssemblerParser.ZpArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.zpArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitZpArgument([NotNull] KickAssemblerParser.ZpArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.fileName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFileName([NotNull] KickAssemblerParser.FileNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.fileName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFileName([NotNull] KickAssemblerParser.FileNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.preprocessorDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreprocessorDirective([NotNull] KickAssemblerParser.PreprocessorDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.preprocessorDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreprocessorDirective([NotNull] KickAssemblerParser.PreprocessorDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.preprocessorDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreprocessorDefine([NotNull] KickAssemblerParser.PreprocessorDefineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.preprocessorDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreprocessorDefine([NotNull] KickAssemblerParser.PreprocessorDefineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.preprocessorUndef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreprocessorUndef([NotNull] KickAssemblerParser.PreprocessorUndefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.preprocessorUndef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreprocessorUndef([NotNull] KickAssemblerParser.PreprocessorUndefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.preprocessorImport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreprocessorImport([NotNull] KickAssemblerParser.PreprocessorImportContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.preprocessorImport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreprocessorImport([NotNull] KickAssemblerParser.PreprocessorImportContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.preprocessorImportIf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreprocessorImportIf([NotNull] KickAssemblerParser.PreprocessorImportIfContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.preprocessorImportIf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreprocessorImportIf([NotNull] KickAssemblerParser.PreprocessorImportIfContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.preprocessorImportOnce"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreprocessorImportOnce([NotNull] KickAssemblerParser.PreprocessorImportOnceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.preprocessorImportOnce"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreprocessorImportOnce([NotNull] KickAssemblerParser.PreprocessorImportOnceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.preprocessorIf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreprocessorIf([NotNull] KickAssemblerParser.PreprocessorIfContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.preprocessorIf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreprocessorIf([NotNull] KickAssemblerParser.PreprocessorIfContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.preprocessorBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreprocessorBlock([NotNull] KickAssemblerParser.PreprocessorBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.preprocessorBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreprocessorBlock([NotNull] KickAssemblerParser.PreprocessorBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.preprocessorCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreprocessorCondition([NotNull] KickAssemblerParser.PreprocessorConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.preprocessorCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreprocessorCondition([NotNull] KickAssemblerParser.PreprocessorConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirective([NotNull] KickAssemblerParser.DirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirective([NotNull] KickAssemblerParser.DirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.memoryDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemoryDirective([NotNull] KickAssemblerParser.MemoryDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.memoryDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemoryDirective([NotNull] KickAssemblerParser.MemoryDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.cpuDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCpuDirective([NotNull] KickAssemblerParser.CpuDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.cpuDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCpuDirective([NotNull] KickAssemblerParser.CpuDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.byteDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterByteDirective([NotNull] KickAssemblerParser.ByteDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.byteDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitByteDirective([NotNull] KickAssemblerParser.ByteDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.wordDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWordDirective([NotNull] KickAssemblerParser.WordDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.wordDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWordDirective([NotNull] KickAssemblerParser.WordDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.dwordDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDwordDirective([NotNull] KickAssemblerParser.DwordDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.dwordDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDwordDirective([NotNull] KickAssemblerParser.DwordDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.textDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTextDirective([NotNull] KickAssemblerParser.TextDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.textDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTextDirective([NotNull] KickAssemblerParser.TextDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.fillDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFillDirective([NotNull] KickAssemblerParser.FillDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.fillDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFillDirective([NotNull] KickAssemblerParser.FillDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.fillDirectiveArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFillDirectiveArguments([NotNull] KickAssemblerParser.FillDirectiveArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.fillDirectiveArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFillDirectiveArguments([NotNull] KickAssemblerParser.FillDirectiveArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.fillExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFillExpression([NotNull] KickAssemblerParser.FillExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.fillExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFillExpression([NotNull] KickAssemblerParser.FillExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.encodingDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEncodingDirective([NotNull] KickAssemblerParser.EncodingDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.encodingDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEncodingDirective([NotNull] KickAssemblerParser.EncodingDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.importDataDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportDataDirective([NotNull] KickAssemblerParser.ImportDataDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.importDataDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportDataDirective([NotNull] KickAssemblerParser.ImportDataDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MultiLabel</c>
	/// labeled alternative in <see cref="KickAssemblerParser.labelName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiLabel([NotNull] KickAssemblerParser.MultiLabelContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MultiLabel</c>
	/// labeled alternative in <see cref="KickAssemblerParser.labelName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiLabel([NotNull] KickAssemblerParser.MultiLabelContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MultiAnonymousLabel</c>
	/// labeled alternative in <see cref="KickAssemblerParser.labelName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiAnonymousLabel([NotNull] KickAssemblerParser.MultiAnonymousLabelContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MultiAnonymousLabel</c>
	/// labeled alternative in <see cref="KickAssemblerParser.labelName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiAnonymousLabel([NotNull] KickAssemblerParser.MultiAnonymousLabelContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AtNameLabel</c>
	/// labeled alternative in <see cref="KickAssemblerParser.labelName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtNameLabel([NotNull] KickAssemblerParser.AtNameLabelContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AtNameLabel</c>
	/// labeled alternative in <see cref="KickAssemblerParser.labelName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtNameLabel([NotNull] KickAssemblerParser.AtNameLabelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.atName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtName([NotNull] KickAssemblerParser.AtNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.atName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtName([NotNull] KickAssemblerParser.AtNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFile([NotNull] KickAssemblerParser.FileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFile([NotNull] KickAssemblerParser.FileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.numberList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberList([NotNull] KickAssemblerParser.NumberListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.numberList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberList([NotNull] KickAssemblerParser.NumberListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.numericList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumericList([NotNull] KickAssemblerParser.NumericListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.numericList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumericList([NotNull] KickAssemblerParser.NumericListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.numeric"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumeric([NotNull] KickAssemblerParser.NumericContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.numeric"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumeric([NotNull] KickAssemblerParser.NumericContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] KickAssemblerParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] KickAssemblerParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.lohibyte"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLohibyte([NotNull] KickAssemblerParser.LohibyteContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.lohibyte"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLohibyte([NotNull] KickAssemblerParser.LohibyteContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.decNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecNumber([NotNull] KickAssemblerParser.DecNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.decNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecNumber([NotNull] KickAssemblerParser.DecNumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.hexNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHexNumber([NotNull] KickAssemblerParser.HexNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.hexNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHexNumber([NotNull] KickAssemblerParser.HexNumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.binNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinNumber([NotNull] KickAssemblerParser.BinNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.binNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinNumber([NotNull] KickAssemblerParser.BinNumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.boolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolean([NotNull] KickAssemblerParser.BooleanContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.boolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolean([NotNull] KickAssemblerParser.BooleanContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.opcodeExtension"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpcodeExtension([NotNull] KickAssemblerParser.OpcodeExtensionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.opcodeExtension"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpcodeExtension([NotNull] KickAssemblerParser.OpcodeExtensionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.fullOpcode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFullOpcode([NotNull] KickAssemblerParser.FullOpcodeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.fullOpcode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFullOpcode([NotNull] KickAssemblerParser.FullOpcodeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.opcode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpcode([NotNull] KickAssemblerParser.OpcodeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.opcode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpcode([NotNull] KickAssemblerParser.OpcodeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.color"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColor([NotNull] KickAssemblerParser.ColorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.color"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColor([NotNull] KickAssemblerParser.ColorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KickAssemblerParser.opcodeConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpcodeConstant([NotNull] KickAssemblerParser.OpcodeConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KickAssemblerParser.opcodeConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpcodeConstant([NotNull] KickAssemblerParser.OpcodeConstantContext context);
}
} // namespace Righthand.RetroDbgDataProvider.KickAssembler
